// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {
  static Array bin;
  /** Initializes the library. */
  function void init()
  {
    var int i,element;
    //var Array bin;
    let i=0;
    let element =1;
    let bin = Array.new(16);
    while (i<16)
    {
      let bin[i] = element;
      let element = element + element;
      let i = i+1;
    }
   return;
  }

  /** Returns the absolute value of x. */
  function int abs(int x) {
    if (x > 0)
    {
      return x;
    }

    else
    {
      return -x;
    }
  }

  /** Returns the product of x and y. */
  function int multiply(int x, int y)
  {
    var int sum, shiftX, j, abs_x, abs_y, temp;
    let temp=0;
    let sum = 0;
    let shiftX = x;
    let j=0;
    let abs_x = Math.abs(x);
    let abs_y = Math.abs(y);
  /*
    do Output.printString("x= ");
    do Output.printInt(x);
    do Output.println();

    do Output.printString("y= ");
    do Output.printInt(y);
    do Output.println();
    */
    while (~(j > 16))
    {
      /*
      do Output.printString("(abs_y & bin[j])= ");
	do Output.printInt((abs_y & bin[j]));
	do Output.println();
	*/
      if ((y & bin[j]) = bin[j])
      {
	let sum = sum + shiftX;
	/*
	do Output.printString("sum= ");
	do Output.printInt(sum);
	do Output.println();*/
      }

      let shiftX = shiftX + shiftX;
      /*
      do Output.printString("shiftX= ");
      do Output.printInt(shiftX);
      do Output.println();*/
      let j = j+1;
    }

   return sum;
  }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y)
    {
      var int q, abs_x, abs_y, dividend;
      let q =0;
      let abs_x = Math.abs(x);
      let abs_y = Math.abs(y);
      /*
      do Output.printString("x= ");
      do Output.printInt(x);
      do Output.println();

      do Output.printString("y= ");
      do Output.printInt(y);
      do Output.println();
      */
      if (abs_y>abs_x)
      {
	/*do Output.printString("abs_y>abs_x   ret 0");
	do Output.println();
	*/
	return 0;
      }

      let q = abs_x/(abs_y+abs_y);

      /*do Output.printString("q= ");
      do Output.printInt(q);
      do Output.println();

      do Output.printString("abs_x-2*q*abs_y= ");
      do Output.printInt(abs_x-(2*q*abs_y));
      do Output.println();
      */
      if ((abs_x-(2*q*abs_y)) < abs_y)
      {
	/*	  do Output.printString("ret= ");
	do Output.printInt(q+q);
	do Output.println();*/
	let dividend = q+q;
      }

      else
      {
	/*	  do Output.printString("ret= ");
	do Output.printInt(q+q+1);
	do Output.println();
	*/
	let dividend = q+q+1;
      }

      if (x <0 | y<0)
      {
	return -dividend;
      }

      else
      {
	return dividend;
      }

    }

function int findIdeal(int x)
{
  var int i, n;
  let i = 0;
  let n = 0;

  while (i<16)
  {
    // 	do Output.printString("i= ");
    // 	do Output.printInt(i);
    // 	do Output.println();
    //
    // 	do Output.printString("bin= ");
    // 	do Output.printInt(bin[i]);
    // 	do Output.println();
    //
    if (~(x > bin[i]))
    {
      let n = bin[i];

      do Output.printString("bin= ");
      do Output.printInt(bin[i]);
      do Output.println();
      let i=i+1;
    }

    else
    {
      return n;
    }
  }
  return n;
}

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int n,i,y,j,nj;
      //let i = 7;
      let i=0;
      let y=0;
      let j=8;
      let nj = 256;

      while (~(nj<0))
      {
	if (~(((y+nj)*(y+nj))>x))
	{
	  let y = y + nj;
	}

	let nj = nj/2;
      }

      return y;

    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a>b)
      {
	return a;
      }
      else
      {
	return b;
      }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a<b)
      {
	return b;
      }
      else
      {
	return a;
      }
    }
}
