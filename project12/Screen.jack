// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Screen.jack

/**
 * Graphic screen library.
 */
class Screen {
  static int height;
  static int width;
  static int min_addr, max_addr;
  static boolean color; //white = false black = true

  /** Initializes the Screen. */
  function void init() {
    let height = 256;
    let width = 512;
    let min_addr = 16384;
    let max_addr = 24575;
    return;
  }

/** Erases the whole screen. */
function void clearScreen() {
  var int i,j;
  let i=min_addr;
  let j=0;

  //       while (height > i)
  //       {
    // 	while (width > j)
    // 	{
      // 	  do Screen.setColor(false);
      // 	  do Screen.drawPixel(j,i);
      // 	  let j = j+1;
      // 	}
      // 	let i = i+1;
      // // 	let j = 0;
      //       }


  while (max_addr > i)
  {
    do Memory.poke(i,0);
  }

  return;
}

/** Sets the color to be used in further draw commands
*  where white = false, black = true. */
function void setColor(boolean b) {
  let color = b;

  return;
}

/** Draws the (x, y) pixel. */
function void drawPixel(int x, int y) {
  var int index;
  let index = y*height;
  let index = index + x;
  do Output.printInt(index);
  do Output.println();

  return;
}

    /** Draws a line from pixel (x1, y1) to (x2, y2). */
    function void drawLine(int x1, int y1, int x2, int y2)
    {
      return;
    }

    /** Draws a filled rectangle where the top left corner
     *  is (x1, y1) and the bottom right corner is (x2, y2). */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
      return;
    }

    /** Draws a filled circle of radius r around (cx, cy). */
    function void drawCircle(int cx, int cy, int r) {
      return;
    }
}
