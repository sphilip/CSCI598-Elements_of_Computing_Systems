// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/String.jack

/**
 * The String type.
 */
class String {
  field Array str;
  field int str_length;
  field int real_length;

  /** Constructs a new empty String with a maximum length of
  *  maxLength. */
  constructor String new(int maxLength) {
    if (maxLength = 0)
    {
      let str_length = 1;
      let str = Array.new(1);
    }

    else
    {
      let str = Array.new(maxLength);
      let str_length = maxLength;
    }

    let real_length = 0;
    return this;
  }

    /** De-allocates the string and frees its space. */
    method void dispose() {
      let str_length = 0;
      let real_length = 0;
      do str.dispose();
      return;
    }

    /** Returns the current length of this String. */
    method int length() {
      return real_length;
    }

    /** Convertn on-negative # to string */
    method String Int2String(int n)
    {
      var int lastDigit,div,mult,i;
      var char c;
      var String new;

      let div = n/10;
      let mult = 10*div;
      let lastDigit = n-mult;
      let c = str[lastDigit];
      let new = String.new(str_length);

      if (n < 10)
      {
	return c-48;
      }
      else
      {
	let new = Int2String(n/10);
	let new = new.appendChar(c);
	return new;
      }
    }

    method int String2Int(String s)
    {
      var int v,i,d;
      let v=0;
      let i=1;

      while (s.length() > i)
      {
	let d = s[i];
	let v = v*10 + d;
      }

      return v;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
      return str[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
      return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
      if (real_length < str_length)
      {
	let str[real_length] = c;
	let real_length = real_length + 1;
	return this;
      }

      else
      {
	return "lolz";
      }
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
      return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
      return 0;
    }


    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
//       var Sting num;
      //let this = Int2String(number);
//     do String2Int();
      return;
    }

    /** Returns the new line character. */
    function char newLine() {
      return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
      return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
      return 34;
    }
}
